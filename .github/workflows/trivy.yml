name: Trivy Scan

on:
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install Trivy CLI
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Extract metadata
        id: meta
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV

          git fetch --tags
          LATEST_TAG=$(git tag --list 'v*.*.*' | sort -V | tail -n1)
          FALLBACK_TAG="${LATEST_TAG:-v0.0.0}"
          echo "GIT_TAG=${FALLBACK_TAG}-${SHORT_SHA}" >> $GITHUB_ENV
          echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV

      - name: Copy example.env files to .env
        run: |
          echo "Replicating example.env files..."
          find . -name "example.env" | while read f; do
            target="$(dirname "$f")/.env"
            cp "$f" "$target"
            echo "âœ“ Created $target"
          done

      - name: Build all Docker Compose services
        run: |
          echo "Building services from docker-compose.yml..."
          docker compose build

      - name: Run Trivy scan for all services
        run: |
          echo "Running Trivy scans..."
          SERVICES=$(docker compose config --services)
          for SERVICE in $SERVICES; do
            IMAGE_ID=$(docker compose images -q $SERVICE)
            echo "Scanning $SERVICE ($IMAGE_ID)..."
            trivy image --exit-code 1 --severity CRITICAL,HIGH --no-progress $IMAGE_ID
          done
